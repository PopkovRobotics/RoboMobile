#pragma once
// Файлы программы
#include "Config.hpp"
#include "PID.hpp"
// Параметры PID регулятора
#define KP          0.21        // Пропорциональный коэффициент регулятора
#define KD          1.0         // Дифференциальный коэффициент регулятора
#define KI          0.0         // Интегральный коэффициент регулятора
#define CENTER      90          // Угол качалки сервопривода, при котором передние колёса стоят прямо
#define RANGE       30          // Максимальное выходное значение регулятора

struct Hold {
    // Таймер для удерживания скорости
    Timer hold_timer;         
    // Флаг, определяющий удерживать ли скорость по времени или по расстоянию
    // (true - по времени, false - по дистанции)
    bool hold_by_time = true,
        hold_start = true;
    // Переменная, в которую записывается расстояние или время в течение
    // которого удерживается заданная скорость
    int32_t hold_for = 0;
    // Скорость модели в см/c, которая будет удерживается
    uint8_t hold_speed = 0;  
    double start_distance = 0.0;

    // Конструктор
    Hold(bool by_time, int32_t for_x, uint8_t speed) {
        hold_by_time = by_time;
        hold_for = for_x;
        hold_speed = speed;
    }
};

/*
 * Функция для создания расчёта параметров движения модели
 * ptr - указатель на параметр типа void, для получения основной информации о модели. 
 */
void* LoopFnc(void* ptr);
